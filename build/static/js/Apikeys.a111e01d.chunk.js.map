{"version":3,"file":"static/js/Apikeys.a111e01d.chunk.js","mappings":"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","sources":["components/FreequancyPanel/DataTable.jsx","components/FreequancyPanel/FreequancyChange.jsx","components/FreequancyPanel/index.jsx","modules/ApiKeyModule/DataTableDropMen.jsx","components/UpdateApiKeyPanel/DataTable.jsx","components/UpdateApiKeyPanel/DeleteItem.jsx","components/UpdateApiKeyPanel/UpdatePanel.jsx","components/UpdateApiKeyPanel/index.jsx","modules/ApiKeyModule/index.jsx","pages/Apikeys.jsx","../node_modules/@ant-design/icons-svg/es/asn/ControlOutlined.js","../node_modules/@ant-design/icons/es/icons/ControlOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Dropdown, Table } from 'antd';\r\nimport { Button, PageHeader } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { erp } from '@/redux/erp/actions';\r\nimport { settings } from '@/redux/settings/actions';\r\nimport { selectListItems } from '@/redux/erp/selectors';\r\nimport { useErpContext } from '@/context/erp';\r\nimport uniqueId from '@/utils/uinqueId';\r\n\r\nimport { RedoOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport TableResponsive from '../TableResponsive';\r\nfunction AddNewItem({ config }) {\r\n  const { ADD_NEW_ENTITY } = config;\r\n  const { erpContextAction } = useErpContext();\r\n  const { createPanel } = erpContextAction;\r\n  const handelClick = () => {\r\n    createPanel.open();\r\n  };\r\n\r\n  return (\r\n    <Button onClick={handelClick} type=\"primary\" icon={<PlusOutlined />} className='primaryBtn'>\r\n      {ADD_NEW_ENTITY}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DataTable({ config, DataTableDropMenu }) {\r\n  let { entity, dataTableColumns, listURL, arrFiltersReq, filters, sorter } = config;\r\n  const { DATATABLE_TITLE } = config;\r\n  dataTableColumns = [\r\n    {\r\n      title: 'Sl.No',\r\n      dataIndex: 'slNo',\r\n      width: 50,\r\n      render: (value, record, index) => (`${value || index + 1}`),\r\n    },\r\n    ...dataTableColumns,\r\n    {\r\n      title: '',\r\n      render: (value, row, index) => (\r\n        <Dropdown overlay={DataTableDropMenu({ row, entity })} trigger={['click']}>\r\n          <EllipsisOutlined style={{ cursor: 'pointer', fontSize: '24px' }} />\r\n        </Dropdown>\r\n      ),\r\n    },\r\n  ];\r\n  const onFilter = (value, record) => {\r\n    return record;\r\n  }\r\n\r\n  const { result: listResult, isLoading: listIsLoading } = useSelector(selectListItems);\r\n  const { pagination, items, objFilterList } = listResult;\r\n\r\n  const dispatch = useDispatch();\r\n  const handelDataTableLoad = useCallback((pagination, filters) => {\r\n    const options = { page: pagination.current || 1, pageSize: pagination.pageSize || 100, filters, sorter, arrFiltersReq };\r\n    dispatch(erp.list({ listURL, options }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(erp.list({\r\n      listURL, options: {\r\n        page: pagination.current || 1, pageSize: pagination.pageSize || 100\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title={DATATABLE_TITLE}\r\n        ghost={true}\r\n        extra={[\r\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`} icon={<RedoOutlined />} className='outLineIcon'>\r\n            Refresh\r\n          </Button>,\r\n        ]}\r\n        style={{\r\n          padding: '20px 0px',\r\n        }}\r\n      ></PageHeader>\r\n      <TableResponsive\r\n        columns={dataTableColumns}\r\n        rowKey={(item) => item.id}\r\n        dataSource={items}\r\n        pagination={pagination}\r\n        loading={listIsLoading}\r\n        onChange={handelDataTableLoad}\r\n      />\r\n    </>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Modal, Select } from 'antd';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { erp } from '@/redux/erp/actions';\r\nimport { useErpContext } from '@/context/erp';\r\nimport { selectDeletedItem } from '@/redux/erp/selectors';\r\nimport { valueByString } from '@/utils/helpers';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function ChangeFrequancyModal({ config }) {\r\n    let {\r\n        deleteURL,\r\n        entityDisplayLabels,\r\n        Message = 'Do you Want to Change Weather sending Frequacy ',\r\n        modalTitle = 'Change Fequancy',\r\n        listURL,\r\n        deleteRequest\r\n    } = config;\r\n    const dispatch = useDispatch();\r\n    const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\r\n    const { state, erpContextAction } = useErpContext();\r\n    const { statusModal } = state;\r\n    const { statusModals } = erpContextAction;\r\n    const [displayItem, setDisplayItem] = useState('');\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (isSuccess) {\r\n            statusModals.close();\r\n            dispatch(erp.list({ listURL }));\r\n        }\r\n        if (current) {\r\n            let labels = entityDisplayLabels.map((x) => valueByString(current, x)).join(' ');\r\n\r\n            setDisplayItem(labels);\r\n        }\r\n    }, [isSuccess, current]);\r\n\r\n\r\n    const handleOk = () => {\r\n        if (selectedStatus !='') {\r\n            statusModals.close();\r\n            dispatch(\r\n                erp.create({\r\n                    createURL: 'update_freequcny',\r\n                    jsonData: {\r\n                        _id: current._id,\r\n                        strFreequancyType: selectedStatus,\r\n                    },\r\n                })\r\n            ).then(() => {\r\n                setSelectedStatus('')\r\n                dispatch(erp.list({ listURL }));\r\n            })\r\n        }\r\n    };\r\n    const handleCancel = () => {\r\n        if (!isLoading) statusModals.close();\r\n    };\r\n    const handleStatusChange = (value) => {\r\n        setSelectedStatus(value);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            okButtonProps={{ className: 'primaryBtn' }}\r\n            title={modalTitle}\r\n            visible={statusModal.isOpen}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            confirmLoading={isLoading}\r\n        >\r\n            <p>\r\n                {`${Message} `}\r\n            </p>\r\n            <Select\r\n                style={{ width: '100%', marginTop: '16px' }}\r\n                placeholder=\"Select Status\"\r\n                onChange={handleStatusChange}\r\n            >\r\n                <Option value=\"Hourly\">Hourly</Option>\r\n                <Option value=\"Daily\">Daily</Option>\r\n                <Option value=\"Weekly\">Weekly</Option>\r\n            </Select>\r\n        </Modal>\r\n    );\r\n}\r\n","import DataTable from \"./DataTable\";\r\nimport { useDispatch ,useSelector} from 'react-redux';\r\nimport { erp } from '@/redux/erp/actions';\r\nimport { useErpContext } from '@/context/erp';\r\nimport { useLayoutEffect } from \"react\";\r\nimport Visibility from \"../Visibility\";\r\nimport ChangeFrequancyModal from \"./FreequancyChange\";\r\n\r\n\r\n  export default function FreequancyPanel({config,DataTableDropMenu}) {\r\n    const dispatch = useDispatch();\r\n    const { state } = useErpContext();\r\n    const { dataTableList,statusModal } = state;\r\n    useLayoutEffect(() => {\r\n      dispatch(erp.resetState());\r\n    }, []);\r\n    return (\r\n      <>\r\n      <Visibility isVisible={dataTableList.isOpen}>\r\n          <DataTable config={config} DataTableDropMenu={DataTableDropMenu} />\r\n          <ChangeFrequancyModal  config={config} isVisible={statusModal.isOpen} />\r\n     </Visibility>\r\n      </>\r\n    );\r\n  }","import { Menu } from 'antd';\r\n\r\nimport {\r\n  EditOutlined,\r\n  ControlOutlined,\r\n} from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { erp } from '@/redux/erp/actions';\r\nimport { useErpContext } from '@/context/erp';\r\n\r\nimport uniqueId from '@/utils/uinqueId';\r\n\r\n\r\nexport default function DataTableDropMenu({ row, entity }) {\r\n  const dispatch = useDispatch();\r\n  const { erpContextAction } = useErpContext();\r\n  const { readPanel, updatePanel, recordPanel, statusModals,modal,recordClientPayment } = erpContextAction;\r\n  const item = row;\r\n \r\n \r\n  function Delete() {\r\n    dispatch(erp.currentAction({ actionType: 'delete', data: item }));\r\n    modal.open();\r\n  }\r\n\r\n  function Status() {\r\n    dispatch(erp.currentAction({ actionType: 'delete', data: item }));\r\n    statusModals.open();\r\n  }\r\n\r\n\r\n  return (\r\n    <Menu style={{ minWidth: 130 }}>\r\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Delete}>\r\n      Update Weather Key\r\n      </Menu.Item>\r\n      <Menu.Item key={`${uniqueId()}`} icon={<ControlOutlined />}  onClick={Status} >\r\n      Update Bot key\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { Dropdown, Table } from 'antd';\r\nimport { Button, PageHeader } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { erp } from '@/redux/erp/actions';\r\nimport { settings } from '@/redux/settings/actions';\r\nimport { selectListItems } from '@/redux/erp/selectors';\r\nimport { useErpContext } from '@/context/erp';\r\nimport uniqueId from '@/utils/uinqueId';\r\n\r\nimport { RedoOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport TableResponsive from '../TableResponsive';\r\nfunction AddNewItem({ config }) {\r\n  const { ADD_NEW_ENTITY } = config;\r\n  const { erpContextAction } = useErpContext();\r\n  const { createPanel } = erpContextAction;\r\n  const handelClick = () => {\r\n    createPanel.open();\r\n  };\r\n\r\n  return (\r\n    <Button onClick={handelClick} type=\"primary\" icon={<PlusOutlined />} className='primaryBtn'>\r\n      {ADD_NEW_ENTITY}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DataTable({ config, DataTableDropMenu }) {\r\n  let { entity, dataTableColumns, listURL, arrFiltersReq, filters, sorter } = config;\r\n  const { DATATABLE_TITLE } = config;\r\n  dataTableColumns = [\r\n    {\r\n      title: 'Sl.No',\r\n      dataIndex: 'slNo',\r\n      width: 50,\r\n      render: (value, record, index) => (`${value || index + 1}`),\r\n    },\r\n    ...dataTableColumns,\r\n    {\r\n      title: '',\r\n      render: (value, row, index) => (\r\n        <Dropdown overlay={DataTableDropMenu({ row, entity })} trigger={['click']}>\r\n          <EllipsisOutlined style={{ cursor: 'pointer', fontSize: '24px' }} />\r\n        </Dropdown>\r\n      ),\r\n    },\r\n  ];\r\n  const onFilter = (value, record) => {\r\n    return record;\r\n  }\r\n\r\n  const { result: listResult, isLoading: listIsLoading } = useSelector(selectListItems);\r\n  const { pagination, items, objFilterList } = listResult;\r\n\r\n  const dispatch = useDispatch();\r\n  const handelDataTableLoad = useCallback((pagination, filters) => {\r\n    const options = { page: pagination.current || 1, pageSize: pagination.pageSize || 100, filters, sorter, arrFiltersReq };\r\n    dispatch(erp.list({ listURL, options }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(erp.list({\r\n      listURL, options: {\r\n        page: pagination.current || 1, pageSize: pagination.pageSize || 100\r\n      }\r\n    }));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title={DATATABLE_TITLE}\r\n        ghost={true}\r\n        extra={[\r\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`} icon={<RedoOutlined />} className='outLineIcon'>\r\n            Refresh\r\n          </Button>,\r\n        ]}\r\n        style={{\r\n          padding: '20px 0px',\r\n        }}\r\n      ></PageHeader>\r\n      <TableResponsive\r\n        columns={dataTableColumns}\r\n        rowKey={(item) => item.id}\r\n        dataSource={items}\r\n        pagination={pagination}\r\n        loading={listIsLoading}\r\n        onChange={handelDataTableLoad}\r\n      />\r\n    </>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Input, Modal } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { erp } from '@/redux/erp/actions';\r\nimport { useErpContext } from '@/context/erp';\r\nimport { selectDeletedItem } from '@/redux/erp/selectors';\r\nimport { valueByString } from '@/utils/helpers';\r\n\r\nexport default function WeatherKey({ config }) {\r\n  let {\r\n    deleteURL,\r\n    entityDisplayLabels,\r\n    deleteMessage = 'Do you want to Change Weather api key of Open Weather team ',\r\n    modalTitle = 'change Weather key',\r\n    listURL,\r\n    deleteRequest,\r\n    deletePayment,\r\n    handelDataTable\r\n  } = config;\r\n  const dispatch = useDispatch();\r\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\r\n  const { state, erpContextAction } = useErpContext();\r\n  const { deleteModal } = state;\r\n  const { modal } = erpContextAction;\r\n  const [displayItem, setDisplayItem] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      //modal.close();\r\n      dispatch(erp.list({ listURL }));\r\n    }\r\n    if (current) {\r\n      let labels = entityDisplayLabels.map((x) => valueByString(current, x)).join(' ');\r\n      setDisplayItem(labels);\r\n    }\r\n  }, [isSuccess, current]);\r\n\r\n  const handleOk = async () => { \r\n    if (selectedStatus !='') {\r\n      await dispatch(erp.delete({ deleteURL:'update_apikey', jsonData: {strWeatherKey:selectedStatus,_id: current._id, ...deleteRequest } })).then(() => {\r\n        setSelectedStatus('')\r\n        modal.close();\r\n        dispatch(erp.list({ listURL }));\r\n    })\r\n  };\r\n}\r\n\r\n  const handleCancel = () => {\r\n    if (!isLoading) modal.close();\r\n  };\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    setSelectedStatus(e.target.value);\r\n};\r\n\r\n  return (\r\n    <Modal\r\n    okButtonProps={{style:{backgroundColor:' rgb(255, 160, 176) ',color:' rgb(255, 255, 255)',borderColor:' rgb(255, 160, 176) '}}}\r\n    cancelButtonProps={{className:'outLineIcon'}}\r\n    title={modalTitle}\r\n      visible={deleteModal.isOpen}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      confirmLoading={isLoading}\r\n    >\r\n      <p>\r\n        {deleteMessage}\r\n      </p>\r\n\r\n      <Input\r\n                type=\"text\"\r\n                value={selectedStatus}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter new Weather key\"\r\n                style={{ width: '100%', marginTop: '16px' }}\r\n            />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Input, Modal, Select } from 'antd';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { erp } from '@/redux/erp/actions';\r\nimport { useErpContext } from '@/context/erp';\r\nimport { selectDeletedItem } from '@/redux/erp/selectors';\r\nimport { valueByString } from '@/utils/helpers';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function UpdateKeyModal({ config }) {\r\n    let {\r\n        deleteURL,\r\n        entityDisplayLabels,\r\n        Message = 'Do you Want to Change Bot key ',\r\n        modalTitle = 'Change Bot Key',\r\n        listURL,\r\n    } = config;\r\n    const dispatch = useDispatch();\r\n    const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\r\n    const { state, erpContextAction } = useErpContext();\r\n    const { statusModal } = state;\r\n    const { statusModals } = erpContextAction;\r\n    const [displayItem, setDisplayItem] = useState('');\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (isSuccess) {\r\n            dispatch(erp.list({ listURL }));\r\n        }\r\n        if (current) {\r\n            let labels = entityDisplayLabels.map((x) => valueByString(current, x)).join(' ');\r\n\r\n            setDisplayItem(labels);\r\n        }\r\n    }, [isSuccess, current]);\r\n\r\n\r\n    const handleOk = () => {\r\n        if (selectedStatus !='') {\r\n            statusModals.close();\r\n            dispatch(\r\n                erp.create({\r\n                    createURL: `update_apikey`,\r\n                    jsonData: {\r\n                        _id: current._id,\r\n                        strBotKey: selectedStatus,\r\n                    },\r\n                })\r\n            ).then(() => {\r\n                setSelectedStatus('')\r\n                statusModals.close();\r\n                dispatch(erp.list({ listURL }));\r\n            })\r\n        }\r\n    };\r\n    const handleCancel = () => {\r\n        if (!isLoading) statusModals.close();\r\n    };\r\n   \r\n    const handleInputChange = (e) => {\r\n        setSelectedStatus(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            okButtonProps={{ className: 'primaryBtn' }}\r\n            title={modalTitle}\r\n            visible={statusModal.isOpen}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            confirmLoading={isLoading}\r\n        >\r\n            <p>\r\n                {`${Message}`}\r\n             \r\n            </p>\r\n            <Input\r\n                type=\"text\"\r\n                value={selectedStatus}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter new Bot key\"\r\n                style={{ width: '100%', marginTop: '16px' }}\r\n            />\r\n            \r\n        </Modal>\r\n    );\r\n}\r\n","import DataTable from \"./DataTable\";\r\nimport { useDispatch ,useSelector} from 'react-redux';\r\nimport { erp } from '@/redux/erp/actions';\r\nimport { useErpContext } from '@/context/erp';\r\nimport { useLayoutEffect } from \"react\";\r\nimport Visibility from \"../Visibility\";\r\nimport Delete from \"./DeleteItem\";\r\nimport StatusChangeModal from \"./UpdatePanel\";\r\nimport UpdateKeyModal from \"./UpdatePanel\";\r\nimport WeatherKey from \"./DeleteItem\";\r\n\r\n\r\n  export default function UpdateApiKeyPanel({config,DataTableDropMenu}) {\r\n    const dispatch = useDispatch();\r\n    const { state } = useErpContext();\r\n    const { dataTableList,statusModal,deleteModal } = state;\r\n    useLayoutEffect(() => {\r\n      dispatch(erp.resetState());\r\n    }, []);\r\n    return (\r\n      <>\r\n      <Visibility isVisible={dataTableList.isOpen}>\r\n          <DataTable config={config} DataTableDropMenu={DataTableDropMenu} />\r\n          <UpdateKeyModal  config={config} isVisible={statusModal.isOpen} />\r\n          <WeatherKey config={config} isVisible={deleteModal.isOpen} />\r\n\r\n     </Visibility>\r\n      </>\r\n    );\r\n  }","\r\nimport React from 'react'\r\nimport DataTableDropMenu from './DataTableDropMen'\r\nimport UserLayout from '@/layout/UserLayout'\r\nimport UpdatePanel from '@/components/FreequancyPanel'\r\nimport UpdateApiKeyPanel from '@/components/UpdateApiKeyPanel'\r\n\r\nexport default function ApiKeyModule({config}) {\r\n  return (\r\n    <UserLayout>\r\n      <UpdateApiKeyPanel config={config}\r\n        DataTableDropMenu={DataTableDropMenu}\r\n      />\r\n    </UserLayout>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/en';\r\nimport ApiKeyModule from '@/modules/ApiKeyModule';\r\n\r\ndayjs.locale('en');\r\n\r\nexport default function ApiKeysEntry() {\r\n  const entity = 'Users';\r\n  const searchConfig = {\r\n    displayLabels: ['name', 'strFullName'],\r\n    searchFields: 'strFullName,strDepartment',\r\n  };\r\n\r\n\r\n  const entityDisplayLabels = ['number', 'strFullName'];\r\n\r\n \r\n  const dataTableColumns = [\r\n    { title: 'Open Weather Api key', dataIndex: 'strWeatherKey' },\r\n    { title: 'Telegram Bot key', dataIndex: 'strBotKey' },\r\n  ];\r\n\r\n  const PANEL_TITLE = 'Api key Panel';\r\n  const dataTableTitle = 'Api key Lists';\r\n  const DATATABLE_TITLE = 'Api key List';\r\n  const ENTITY_NAME = 'Api Key';\r\n\r\n  const config = {\r\n    entity,\r\n    PANEL_TITLE,\r\n    dataTableTitle,\r\n    ENTITY_NAME,\r\n    DATATABLE_TITLE,\r\n    dataTableColumns,\r\n    searchConfig,\r\n    entityDisplayLabels,\r\n    createURL: '',\r\n    listURL: 'get_apikeys',\r\n    deleteURL: '',\r\n    updatURL:'update_apikey'\r\n\r\n  };\r\n\r\n  return <ApiKeyModule config={config} />;\r\n}\r\n\r\n\r\n","// This icon file is generated automatically.\nvar ControlOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656zM340 683v77c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-77c-10.1 3.3-20.8 5-32 5s-21.9-1.8-32-5zm64-198V264c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v221c10.1-3.3 20.8-5 32-5s21.9 1.8 32 5zm-64 198c10.1 3.3 20.8 5 32 5s21.9-1.8 32-5c41.8-13.5 72-52.7 72-99s-30.2-85.5-72-99c-10.1-3.3-20.8-5-32-5s-21.9 1.8-32 5c-41.8 13.5-72 52.7-72 99s30.2 85.5 72 99zm.1-115.7c.3-.6.7-1.2 1-1.8v-.1l1.2-1.8c.1-.2.2-.3.3-.5.3-.5.7-.9 1-1.4.1-.1.2-.3.3-.4.5-.6.9-1.1 1.4-1.6l.3-.3 1.2-1.2.4-.4c.5-.5 1-.9 1.6-1.4.6-.5 1.1-.9 1.7-1.3.2-.1.3-.2.5-.3.5-.3.9-.7 1.4-1 .1-.1.3-.2.4-.3.6-.4 1.2-.7 1.9-1.1.1-.1.3-.1.4-.2.5-.3 1-.5 1.6-.8l.6-.3c.7-.3 1.3-.6 2-.8.7-.3 1.4-.5 2.1-.7.2-.1.4-.1.6-.2.6-.2 1.1-.3 1.7-.4.2 0 .3-.1.5-.1.7-.2 1.5-.3 2.2-.4.2 0 .3 0 .5-.1.6-.1 1.2-.1 1.8-.2h.6c.8 0 1.5-.1 2.3-.1s1.5 0 2.3.1h.6c.6 0 1.2.1 1.8.2.2 0 .3 0 .5.1.7.1 1.5.2 2.2.4.2 0 .3.1.5.1.6.1 1.2.3 1.7.4.2.1.4.1.6.2.7.2 1.4.4 2.1.7.7.2 1.3.5 2 .8l.6.3c.5.2 1.1.5 1.6.8.1.1.3.1.4.2.6.3 1.3.7 1.9 1.1.1.1.3.2.4.3.5.3 1 .6 1.4 1 .2.1.3.2.5.3.6.4 1.2.9 1.7 1.3s1.1.9 1.6 1.4l.4.4 1.2 1.2.3.3c.5.5 1 1.1 1.4 1.6.1.1.2.3.3.4.4.4.7.9 1 1.4.1.2.2.3.3.5l1.2 1.8s0 .1.1.1a36.18 36.18 0 015.1 18.5c0 6-1.5 11.7-4.1 16.7-.3.6-.7 1.2-1 1.8 0 0 0 .1-.1.1l-1.2 1.8c-.1.2-.2.3-.3.5-.3.5-.7.9-1 1.4-.1.1-.2.3-.3.4-.5.6-.9 1.1-1.4 1.6l-.3.3-1.2 1.2-.4.4c-.5.5-1 .9-1.6 1.4-.6.5-1.1.9-1.7 1.3-.2.1-.3.2-.5.3-.5.3-.9.7-1.4 1-.1.1-.3.2-.4.3-.6.4-1.2.7-1.9 1.1-.1.1-.3.1-.4.2-.5.3-1 .5-1.6.8l-.6.3c-.7.3-1.3.6-2 .8-.7.3-1.4.5-2.1.7-.2.1-.4.1-.6.2-.6.2-1.1.3-1.7.4-.2 0-.3.1-.5.1-.7.2-1.5.3-2.2.4-.2 0-.3 0-.5.1-.6.1-1.2.1-1.8.2h-.6c-.8 0-1.5.1-2.3.1s-1.5 0-2.3-.1h-.6c-.6 0-1.2-.1-1.8-.2-.2 0-.3 0-.5-.1-.7-.1-1.5-.2-2.2-.4-.2 0-.3-.1-.5-.1-.6-.1-1.2-.3-1.7-.4-.2-.1-.4-.1-.6-.2-.7-.2-1.4-.4-2.1-.7-.7-.2-1.3-.5-2-.8l-.6-.3c-.5-.2-1.1-.5-1.6-.8-.1-.1-.3-.1-.4-.2-.6-.3-1.3-.7-1.9-1.1-.1-.1-.3-.2-.4-.3-.5-.3-1-.6-1.4-1-.2-.1-.3-.2-.5-.3-.6-.4-1.2-.9-1.7-1.3s-1.1-.9-1.6-1.4l-.4-.4-1.2-1.2-.3-.3c-.5-.5-1-1.1-1.4-1.6-.1-.1-.2-.3-.3-.4-.4-.4-.7-.9-1-1.4-.1-.2-.2-.3-.3-.5l-1.2-1.8v-.1c-.4-.6-.7-1.2-1-1.8-2.6-5-4.1-10.7-4.1-16.7s1.5-11.7 4.1-16.7zM620 539v221c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V539c-10.1 3.3-20.8 5-32 5s-21.9-1.8-32-5zm64-198v-77c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v77c10.1-3.3 20.8-5 32-5s21.9 1.8 32 5zm-64 198c10.1 3.3 20.8 5 32 5s21.9-1.8 32-5c41.8-13.5 72-52.7 72-99s-30.2-85.5-72-99c-10.1-3.3-20.8-5-32-5s-21.9 1.8-32 5c-41.8 13.5-72 52.7-72 99s30.2 85.5 72 99zm.1-115.7c.3-.6.7-1.2 1-1.8v-.1l1.2-1.8c.1-.2.2-.3.3-.5.3-.5.7-.9 1-1.4.1-.1.2-.3.3-.4.5-.6.9-1.1 1.4-1.6l.3-.3 1.2-1.2.4-.4c.5-.5 1-.9 1.6-1.4.6-.5 1.1-.9 1.7-1.3.2-.1.3-.2.5-.3.5-.3.9-.7 1.4-1 .1-.1.3-.2.4-.3.6-.4 1.2-.7 1.9-1.1.1-.1.3-.1.4-.2.5-.3 1-.5 1.6-.8l.6-.3c.7-.3 1.3-.6 2-.8.7-.3 1.4-.5 2.1-.7.2-.1.4-.1.6-.2.6-.2 1.1-.3 1.7-.4.2 0 .3-.1.5-.1.7-.2 1.5-.3 2.2-.4.2 0 .3 0 .5-.1.6-.1 1.2-.1 1.8-.2h.6c.8 0 1.5-.1 2.3-.1s1.5 0 2.3.1h.6c.6 0 1.2.1 1.8.2.2 0 .3 0 .5.1.7.1 1.5.2 2.2.4.2 0 .3.1.5.1.6.1 1.2.3 1.7.4.2.1.4.1.6.2.7.2 1.4.4 2.1.7.7.2 1.3.5 2 .8l.6.3c.5.2 1.1.5 1.6.8.1.1.3.1.4.2.6.3 1.3.7 1.9 1.1.1.1.3.2.4.3.5.3 1 .6 1.4 1 .2.1.3.2.5.3.6.4 1.2.9 1.7 1.3s1.1.9 1.6 1.4l.4.4 1.2 1.2.3.3c.5.5 1 1.1 1.4 1.6.1.1.2.3.3.4.4.4.7.9 1 1.4.1.2.2.3.3.5l1.2 1.8v.1a36.18 36.18 0 015.1 18.5c0 6-1.5 11.7-4.1 16.7-.3.6-.7 1.2-1 1.8v.1l-1.2 1.8c-.1.2-.2.3-.3.5-.3.5-.7.9-1 1.4-.1.1-.2.3-.3.4-.5.6-.9 1.1-1.4 1.6l-.3.3-1.2 1.2-.4.4c-.5.5-1 .9-1.6 1.4-.6.5-1.1.9-1.7 1.3-.2.1-.3.2-.5.3-.5.3-.9.7-1.4 1-.1.1-.3.2-.4.3-.6.4-1.2.7-1.9 1.1-.1.1-.3.1-.4.2-.5.3-1 .5-1.6.8l-.6.3c-.7.3-1.3.6-2 .8-.7.3-1.4.5-2.1.7-.2.1-.4.1-.6.2-.6.2-1.1.3-1.7.4-.2 0-.3.1-.5.1-.7.2-1.5.3-2.2.4-.2 0-.3 0-.5.1-.6.1-1.2.1-1.8.2h-.6c-.8 0-1.5.1-2.3.1s-1.5 0-2.3-.1h-.6c-.6 0-1.2-.1-1.8-.2-.2 0-.3 0-.5-.1-.7-.1-1.5-.2-2.2-.4-.2 0-.3-.1-.5-.1-.6-.1-1.2-.3-1.7-.4-.2-.1-.4-.1-.6-.2-.7-.2-1.4-.4-2.1-.7-.7-.2-1.3-.5-2-.8l-.6-.3c-.5-.2-1.1-.5-1.6-.8-.1-.1-.3-.1-.4-.2-.6-.3-1.3-.7-1.9-1.1-.1-.1-.3-.2-.4-.3-.5-.3-1-.6-1.4-1-.2-.1-.3-.2-.5-.3-.6-.4-1.2-.9-1.7-1.3s-1.1-.9-1.6-1.4l-.4-.4-1.2-1.2-.3-.3c-.5-.5-1-1.1-1.4-1.6-.1-.1-.2-.3-.3-.4-.4-.4-.7-.9-1-1.4-.1-.2-.2-.3-.3-.5l-1.2-1.8v-.1c-.4-.6-.7-1.2-1-1.8-2.6-5-4.1-10.7-4.1-16.7s1.5-11.7 4.1-16.7z\" } }] }, \"name\": \"control\", \"theme\": \"outlined\" };\nexport default ControlOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ControlOutlinedSvg from \"@ant-design/icons-svg/es/asn/ControlOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ControlOutlined = function ControlOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ControlOutlinedSvg\n  }));\n};\n\nControlOutlined.displayName = 'ControlOutlined';\nexport default /*#__PURE__*/React.forwardRef(ControlOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);"],"names":["DataTable","_ref2","config","DataTableDropMenu","entity","dataTableColumns","listURL","arrFiltersReq","sorter","filters","DATATABLE_TITLE","title","dataIndex","width","render","value","record","index","concat","_toConsumableArray","row","_jsx","Dropdown","overlay","trigger","children","EllipsisOutlined","style","cursor","fontSize","_useSelector","useSelector","selectListItems","listResult","result","listIsLoading","isLoading","pagination","items","dispatch","objFilterList","useDispatch","handelDataTableLoad","useCallback","options","page","current","pageSize","erp","list","useEffect","_jsxs","_Fragment","PageHeader","ghost","extra","Button","onClick","icon","RedoOutlined","className","uniqueId","padding","TableResponsive","columns","rowKey","item","id","dataSource","loading","onChange","Option","Select","ChangeFrequancyModal","_ref","entityDisplayLabels","deleteURL","_config$Message","Message","_config$modalTitle","modalTitle","deleteRequest","selectDeletedItem","isSuccess","_useErpContext","useErpContext","state","erpContextAction","statusModal","statusModals","_useState","useState","_useState2","_slicedToArray","setDisplayItem","_useState3","_useState4","selectedStatus","setSelectedStatus","close","labels","map","x","valueByString","join","Modal","okButtonProps","visible","isOpen","onOk","create","createURL","jsonData","_id","strFreequancyType","then","onCancel","confirmLoading","marginTop","placeholder","FreequancyPanel","dataTableList","useLayoutEffect","resetState","Visibility","isVisible","readPanel","updatePanel","recordPanel","modal","recordClientPayment","Menu","minWidth","Item","EditOutlined","currentAction","actionType","data","open","ControlOutlined","WeatherKey","_config$deleteMessage","deleteMessage","deletePayment","handelDataTable","deleteModal","handleOk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","delete","_objectSpread","strWeatherKey","stop","apply","arguments","backgroundColor","color","borderColor","cancelButtonProps","Input","type","e","target","UpdateKeyModal","strBotKey","UpdateApiKeyPanel","ApiKeyModule","UserLayout","ApiKeysEntry","PANEL_TITLE","dataTableTitle","ENTITY_NAME","searchConfig","displayLabels","searchFields","updatURL","dayjs","props","ref","React","AntdIcon","ControlOutlinedSvg","displayName","EditOutlinedSvg"],"sourceRoot":""}